[versions]
buildToolsPlugin = "7.4.2"
minSdk = "21"
targetSdk = "33"
compileSdk = "33"
buildTools = "33.0.2"
versionName = "1.5.0"
versionCode = "5"

material = "1.8.0"
constraintLayout = "2.1.4"
flexbox = "3.0.0"
coreKtx = "1.9.0"

composeCompiler = "1.4.3"
compose = "1.3.0"
appCompat = "1.6.1"
activityCompose = "1.3.1"
composeLiveData = '1.3.3'

kotlin = "1.8.10"
coroutines = "1.6.4"

lifecycle = "2.2.0"
liveData = "2.6.0"
viewModel = "2.6.0"

retrofit = "2.9.0"
okhttp = "4.10.0"
gson = "2.10.1"

koin = "2.0.1"

coil = "2.3.0"
coilCompose = "2.2.2"

pagerIndicator = "1.2.4"

timber = "5.0.1"
stetho = "1.6.0"

leakCanary = "2.10"

junit = "4.13"
mockito = "5.3.0"
coroutinesTest = "1.3.9"
archTesting = "2.1.0"

ktlint = "0.36.0"
detekt = "1.12.0"

[libraries]
plugin-buildTools = { module = "com.android.tools.build:gradle", version.ref = "buildToolsPlugin" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }

appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
material = { module = "com.google.android.material:material", version.ref = "material" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexbox" }
coreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

lifecycle = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycle" }
liveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "liveData" }
viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "viewModel" }

koin = { module = "org.koin:koin-android", version.ref = "koin" }
koinScope = { module = "org.koin:koin-android-scope", version.ref = "koin" }
koinViewModel = { module = "org.koin:koin-android-viewmodel", version.ref = "koin" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okHttpInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }

pagerIndicator = { module = "ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator", version.ref = "pagerIndicator" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
stetho = { module = "com.facebook.stetho:stetho", version.ref = "stetho" }
stethoOkHttp = { module = "com.facebook.stetho:stetho-okhttp3", version.ref = "stetho" }

leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

junit = { module = "junit:junit", version.ref = "junit" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
archTesting = { module = "androidx.arch.core:core-testing", version.ref = "archTesting" }

ktlint = { module = "com.pinterest:ktlint", version.ref = "ktlint" }

composeMaterial = { module = "androidx.compose.material:material", version.ref = "compose" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
composeUI = { module = "androidx.compose.ui:ui", version.ref = "compose" }
composeUITooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
composeLiveData = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "composeLiveData" }

[bundles]
architectureComponents = ["lifecycle", "liveData", "viewModel"]
internet = ["retrofit", "retrofitConverter", "okHttpInterceptor"]
di = ["koin", "koinScope", "koinViewModel"]
tests = ["junit", "mockito", "coroutinesTest", "archTesting"]
stethoLogs = ["stetho", "stethoOkHttp"]
compose = ["composeMaterial", "activityCompose", "composeUI", "composeUITooling", "composeFoundation", "composeLiveData"]